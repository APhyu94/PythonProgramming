# -*- coding: utf-8 -*-
"""Guess the number_Eaint.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1WHLQ1z35fLWjS5vk2XYIHZ0Hk3-7vhPx
"""

import random

while True:
  min = 1
  max = 1000
  correct_ans = random.randint(min,max)
  attempt = 0

  while attempt < 10:
    guess_ans = int(input("Attempt {} . Guess the Number which is a postive integer between 1 and 1000: ".format(attempt+1)))
    attempt += 1

    if guess_ans == correct_ans:
      print("OMG Congrats! You got the right one. You won by guessing {} .".format(correct_ans))
      break
    else:
      if guess_ans < min or guess_ans > max:
        print("Sorry, Your Number must be between 1 and 1000.")
      elif guess_ans<correct_ans:
        print("Too Low. Try Guessing Higher.")
      elif guess_ans>correct_ans:
        print("Too High. Try Guessing Lower.")
    if attempt >5:
      correct_ans = random.randint(min,max)


    if attempt == 10 and guess_ans != correct_ans:
      print("We are sorry but you have used all of your 10 attempts")

  next = input("Want to challenge again? You can play again (yes/no): ")
  if next != ("yes"):
    print("Oh really? We will miss you. Come and Play next time. Byeee!")
    break
  else:
    print("Welcome again!")

#To decide the correct (random) answer to the game, import the “random”  function to determine the answer randomly.
import random

#The “While True” loop has been used to let the game run again after the player has used up all the attempts.
#If the player wants to play again, the loop will start again with a new random number.
while True:

#In this game, the minimum number of positive integers is 1 and the maximum is 1000.
  min = 1
  max = 1000

#To settle the correct answer, we decided on a random integer between minimum and maximum using “random.randint(min,max)”
  correct_ans = random.randint(min,max)

#Before starting a new while loop, the attempt is given at value 0.
  attempt = 0

#Since the player will have only 10 attempts, we start the while loop with an attempt of less than 10 (attempt < 10).
  while attempt < 10:

#To have a guess from the player, we call the input function and ask for the integer between 1 and 1000.
    guess_ans = int(input("Attempt {} . Guess the Number which is a postive integer between 1 and 1000: ".format(attempt+1)))

   #Since I would like the attempt to go up, I used “attempt += 1” to add an attempt whenever the loop(attempt <10) starts again.
    attempt += 1

#If the player got the correct answer before 10 attempts, the player got it right and he/she will be asked whether he/she wants to play again or not.
    if guess_ans == correct_ans:
      print("OMG Congrats! You got the right one. You won by guessing {} .".format(correct_ans))

#To pause the game when he/she won, I used the “break” function.
      break


    else:
#To avoid number confusion by the player, the player will get a warning message if the number is not between 1 and 1000.
      if guess_ans < min or guess_ans > max:
        print("Sorry, Your Number must be between 1 and 1000.")

#Unless the player wins the game, the player can guess the correct answer till the 10th attempt.
#Once the player guesses a number, a hint will be given by saying “Too High or Too Low” according to the guessed number.
      elif guess_ans<correct_ans:
        print("Too Low. Try Guessing Higher.")
      elif guess_ans>correct_ans:
        print("Too High. Try Guessing Lower.")

#To make the game a bit tricker than the usual one, the correct answer will be changed randomly after 5th attempt.
    if attempt >5:
      correct_ans = random.randint(min,max)

#If the player is on the last attempt and he/she still doesn’t get it right, I will print out a message saying he finished the game without winning.
    if attempt == 10 and guess_ans != correct_ans:
      print("We are sorry but you have used all of your 10 attempts")

#In case the player wants to play again, I give an option by asking “yes or no”.
  next = input("Want to challenge again? You can play again (yes/no): ")

#If the player answers “yes”, the “while true” loop will start again with a welcoming message and a new random number.
  if next != ("yes"):
    print("Oh really? We will miss you. Come and Play next time. Byeee!")
    break
  else:
    print("Welcome again!")